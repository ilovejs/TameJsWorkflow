/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"String":3,"String1":4,"String2":5,"QUOTE1":6,"StringAtoms":7,"QUOTE2":8,"StringAtom":9,"STRING_ATOM":10,"InnerExprAtom":11,"OuterExprAtom":12,"LABEL":13,"BraceExpr":14,"FunctionDeclaration":15,"InnerExprAtomList":16,"InnerExpr":17,"ParenExpr":18,"LPAREN":19,"RPAREN":20,"BracketExpr":21,"LBRACKET":22,"RBRACKET":23,"SlotBracketExpr":24,"LBRACE":25,"RBRACE":26,"GENERIC":27,"COMMA":28,"DOT":29,"COLON":30,"ID":31,"DECIMAL":32,"EQUALS":33,"BANG":34,"THIS":35,"ARGUMENTS":36,"Defer":37,"SlotAtom":38,"SlotAtomList":39,"Slot":40,"DEFER":41,"SlotListOpt":42,"SlotList":43,"Expr":44,"ExprStatement":45,"SEMICOLON":46,"Statement":47,"Block":48,"ForStatement":49,"WhileStatement":50,"DoWhileStatement":51,"IfStatement":52,"AwaitStatement":53,"LabeledStatement":54,"ReturnStatement":55,"BreakStatement":56,"ContinueStatement":57,"SwitchStatement":58,"TryStatement":59,"WithStatement":60,"Label":61,"TRY":62,"CatchStatementOpt":63,"FinallyStatementOpt":64,"CATCH":65,"FINALLY":66,"RETURN":67,"CONTINUE":68,"IdOpt":69,"BREAK":70,"WITH":71,"SourceElements":72,"FOR":73,"ForIter":74,"DO":75,"WHILE":76,"SWITCH":77,"CaseBlock":78,"Case":79,"CaseLabel":80,"CaseBody":81,"DEFAULT":82,"CASE":83,"IF":84,"ELSE":85,"FUNCTION":86,"ParamListOpt":87,"AWAIT":88,"ParamList":89,"Param":90,"FunctionBody":91,"ShbangOpt":92,"SHBANG":93,"Program":94,"$accept":0,"$end":1},
terminals_: {2:"error",6:"QUOTE1",8:"QUOTE2",10:"STRING_ATOM",13:"LABEL",19:"LPAREN",20:"RPAREN",22:"LBRACKET",23:"RBRACKET",25:"LBRACE",26:"RBRACE",27:"GENERIC",28:"COMMA",29:"DOT",30:"COLON",31:"ID",32:"DECIMAL",33:"EQUALS",34:"BANG",35:"THIS",36:"ARGUMENTS",41:"DEFER",46:"SEMICOLON",51:"DoWhileStatement",62:"TRY",65:"CATCH",66:"FINALLY",67:"RETURN",68:"CONTINUE",70:"BREAK",71:"WITH",73:"FOR",75:"DO",76:"WHILE",77:"SWITCH",82:"DEFAULT",83:"CASE",84:"IF",85:"ELSE",86:"FUNCTION",88:"AWAIT",93:"SHBANG"},
productions_: [0,[3,1],[3,1],[4,3],[5,3],[9,1],[7,0],[7,2],[11,1],[11,1],[11,1],[11,1],[16,0],[16,2],[17,1],[18,3],[21,3],[24,3],[14,3],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[39,1],[39,2],[40,1],[37,4],[42,0],[42,1],[43,1],[43,3],[44,0],[44,2],[45,2],[45,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[61,1],[54,2],[59,4],[63,0],[63,5],[64,0],[64,2],[55,3],[57,3],[56,3],[60,5],[48,3],[72,0],[72,2],[49,5],[50,6],[50,5],[58,7],[78,0],[78,2],[79,2],[80,2],[80,2],[80,3],[81,1],[52,5],[52,7],[74,5],[74,1],[15,6],[53,2],[69,0],[69,1],[89,1],[89,3],[90,1],[87,0],[87,1],[91,1],[92,0],[92,1],[94,2]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1: this.$ = $$[$0]; 
break;
case 2: this.$ = $$[$0]; 
break;
case 3: this.$ = new yy.String (_$[$0-2].first_line, _$[$0].last_line, "'" + $$[$0-1] + "'"); 
break;
case 4: this.$ = new yy.String (_$[$0-2].first_line, _$[$0].last_line, '"' + $$[$0-1] + '"'); 
break;
case 5: this.$ = yytext; 
break;
case 6: this.$ = ""; 
break;
case 7: this.$ = $$[$0-1] + $$[$0]; 
break;
case 8: this.$ = $$[$0]; 
break;
case 9: this.$ = [ new yy.Atom (_$[$0].first_line, yytext + " :")]; 
break;
case 10: this.$ = $$[$0]; 
break;
case 11: this.$ = [ $$[$0] ]; 
break;
case 12: this.$ = []; 
break;
case 13: this.$ = $$[$0-1].concat ($$[$0]); 
break;
case 14: this.$ = new yy.Expr ($$[$0]); 
break;
case 15: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '(') ];
     $$[$0-1].pushAtomsToArray (out);
     out.push (new yy.Atom (_$[$0].first_line, ')'));
     this.$ = out;
     
break;
case 16: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '[') ];
     $$[$0-1].pushAtomsToArray (out);
     out.push (new yy.Atom (_$[$0].first_line, ']'));
     this.$ = out;
     
break;
case 17: 
     this.$ = $$[$0-1];
     
break;
case 18: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '{') ];
     $$[$0-1].pushAtomsToArray (out);
     out.push (new yy.Atom (_$[$0].first_line, '}'));
     this.$ = out;
     
break;
case 19: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 20: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 21: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 22: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 23: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 24: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 25: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 26: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 27: this.$ = [ $$[$0] ]; 
break;
case 28: this.$ = $$[$0]; 
break;
case 29: this.$ = $$[$0]; 
break;
case 30: this.$ = [ new yy.ThisExpr (_$[$0].first_line) ]; 
break;
case 31: this.$ = [ new yy.ArgumentsExpr (_$[$0].first_line) ]; 
break;
case 32: this.$ = [ $$[$0] ]; 
break;
case 33: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 34: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 35: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 36: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 37: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 38: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 39: this.$ = [ $$[$0] ]; 
break;
case 40: this.$ = $$[$0]; 
break;
case 41: this.$ = [ new yy.IndexExpr (_$[$0].first_line, $$[$0]) ]; 
break;
case 42: this.$ = [ new yy.ThisExpr (_$[$0].first_line) ]; 
break;
case 43: this.$ = [ new yy.ArgumentsExpr (_$[$0].first_line) ]; 
break;
case 44: this.$ = [ $$[$0] ]; 
break;
case 45: this.$ = [ new yy.Atom (_$[$0].first_line, yytext + " :")]; 
break;
case 46: this.$ = $$[$0]; 
break;
case 47: this.$ = [ $$[$0] ]; 
break;
case 48: this.$ = $$[$0]; 
break;
case 49: this.$ = $$[$0-1].concat ($$[$0]); 
break;
case 50: this.$ = new yy.Expr ($$[$0]);  
break;
case 51:
           this.$ = new yy.DeferExpr (_$[$0-3].first_line, $$[$0-1]);
     
break;
case 52: this.$ = []; 
break;
case 53: this.$ = $$[$0]; 
break;
case 54: this.$ = [ $$[$0] ]; 
break;
case 55:
         $$[$0-2].push ($$[$0]);
         this.$ = $$[$0-2];
     
break;
case 56: this.$ = new yy.Expr ([]); 
break;
case 57:
     var lst = $$[$0-1].concat ($$[$0]);
     this.$ = new yy.Expr (lst);
     
break;
case 58: 
         $$[$0-1].addAtom (new yy.Atom (_$[$0].first_line, ";")); 
     this.$ = $$[$0-1]; 
     
break;
case 59:
         this.$ = yy.Expr ([ $$[$0] ] );
     
break;
case 74: this.$ = new yy.Label (_$[$0].first_line, yytext); 
break;
case 75:
         $$[$0].setLabel ($$[$0-1]);
     this.$ = $$[$0];
     
break;
case 76:
      this.$ = new yy.TryStatement (_$[$0-3].first_line, $$[$0-2], $$[$0-1], $$[$0]);
     
break;
case 77: this.$ = null; 
break;
case 78:
         this.$ = new yy.CatchStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 79: this.$ = null; 
break;
case 80:
         this.$ = $$[$0];
     
break;
case 81:
         this.$ = new yy.ReturnStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 82:
         this.$ = new yy.ContinueStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 83:
         this.$ = new yy.BreakStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 84:
         this.$ = new yy.WithStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 85: this.$ = new yy.Block (_$[$0-2].first_line, $$[$0-1]); 
break;
case 86: this.$ = []; 
break;
case 87: $$[$0-1].push ($$[$0]); this.$ = $$[$0-1]; 
break;
case 88:
        this.$ = new yy.ForStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 89:
        this.$ = new yy.DoWhileStatement (_$[$0-5].first_line, $$[$0-1], $$[$0-4]);
     
break;
case 90:
        this.$ = new yy.WhileStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 91:
         this.$ = new yy.SwitchStatement (_$[$0-6].first_line, $$[$0-4], $$[$0-1]);
     
break;
case 92: this.$ = []; 
break;
case 93:
         $$[$0-1].push ($$[$0]);
     this.$ = $$[$0-1];
     
break;
case 94:
         $$[$0-1].addBody (_$[$0-1].first_line, $$[$0]);
     this.$ = $$[$0-1];
     
break;
case 95: this.$ = yy.Case (_$[$0-1].first_line); 
break;
case 96: this.$ = yy.Case (_$[$0-1].first_line, $$[$0]); 
break;
case 97: this.$ = yy.Case (_$[$0-2].first_line, $$[$0-1].toString ()); 
break;
case 98: this.$ = $$[$0]; 
break;
case 99:
        this.$ = new yy.IfElseStatement (_$[$0-4].first_line, $$[$0-2], $$[$0], null);
     
break;
case 100:
        this.$ = new yy.IfElseStatement (_$[$0-6].first_line, $$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 101:
         this.$ = new yy.ForIterClassic ($$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 102:
         this.$ = new yy.ForIterEach ($$[$0]); 
     
break;
case 103:
         this.$ = new yy.FunctionDeclaration (_$[$0-5].first_line, $$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 104:
        this.$ = new yy.AwaitStatement (_$[$0-1].first_line, $$[$0]);
     
break;
case 106: this.$ = yytext; 
break;
case 107: this.$ = [ $$[$0] ]; 
break;
case 108: $$[$0-2].push ($$[$0]); this.$ = $$[$0-2]; 
break;
case 109: this.$ = yytext; 
break;
case 110: this.$ = []; 
break;
case 113: this.$ = null; 
break;
case 114: this.$ = $$[$0]; 
break;
case 115: yy.output = new yy.Program ($$[$0-1], $$[$0]); 
break;
}
},
table: [{1:[2,113],6:[2,113],8:[2,113],13:[2,113],19:[2,113],22:[2,113],25:[2,113],27:[2,113],28:[2,113],29:[2,113],30:[2,113],31:[2,113],32:[2,113],33:[2,113],34:[2,113],35:[2,113],36:[2,113],41:[2,113],46:[2,113],51:[2,113],62:[2,113],67:[2,113],68:[2,113],70:[2,113],71:[2,113],73:[2,113],75:[2,113],76:[2,113],77:[2,113],84:[2,113],86:[2,113],88:[2,113],92:2,93:[1,3],94:1},{1:[3]},{1:[2,86],6:[2,86],8:[2,86],13:[2,86],19:[2,86],22:[2,86],25:[2,86],27:[2,86],28:[2,86],29:[2,86],30:[2,86],31:[2,86],32:[2,86],33:[2,86],34:[2,86],35:[2,86],36:[2,86],41:[2,86],46:[2,86],51:[2,86],62:[2,86],67:[2,86],68:[2,86],70:[2,86],71:[2,86],72:4,73:[2,86],75:[2,86],76:[2,86],77:[2,86],84:[2,86],86:[2,86],88:[2,86]},{1:[2,114],6:[2,114],8:[2,114],13:[2,114],19:[2,114],22:[2,114],25:[2,114],27:[2,114],28:[2,114],29:[2,114],30:[2,114],31:[2,114],32:[2,114],33:[2,114],34:[2,114],35:[2,114],36:[2,114],41:[2,114],46:[2,114],51:[2,114],62:[2,114],67:[2,114],68:[2,114],70:[2,114],71:[2,114],73:[2,114],75:[2,114],76:[2,114],77:[2,114],84:[2,114],86:[2,114],88:[2,114]},{1:[2,115],3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:5,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{1:[2,87],6:[2,87],8:[2,87],13:[2,87],19:[2,87],22:[2,87],25:[2,87],26:[2,87],27:[2,87],28:[2,87],29:[2,87],30:[2,87],31:[2,87],32:[2,87],33:[2,87],34:[2,87],35:[2,87],36:[2,87],41:[2,87],46:[2,87],51:[2,87],62:[2,87],67:[2,87],68:[2,87],70:[2,87],71:[2,87],73:[2,87],75:[2,87],76:[2,87],77:[2,87],82:[2,87],83:[2,87],84:[2,87],86:[2,87],88:[2,87]},{1:[2,60],6:[2,60],8:[2,60],13:[2,60],19:[2,60],22:[2,60],25:[2,60],26:[2,60],27:[2,60],28:[2,60],29:[2,60],30:[2,60],31:[2,60],32:[2,60],33:[2,60],34:[2,60],35:[2,60],36:[2,60],41:[2,60],46:[2,60],51:[2,60],62:[2,60],67:[2,60],68:[2,60],70:[2,60],71:[2,60],73:[2,60],75:[2,60],76:[2,60],77:[2,60],82:[2,60],83:[2,60],84:[2,60],85:[2,60],86:[2,60],88:[2,60]},{1:[2,61],6:[2,61],8:[2,61],13:[2,61],19:[2,61],22:[2,61],25:[2,61],26:[2,61],27:[2,61],28:[2,61],29:[2,61],30:[2,61],31:[2,61],32:[2,61],33:[2,61],34:[2,61],35:[2,61],36:[2,61],41:[2,61],46:[2,61],51:[2,61],62:[2,61],67:[2,61],68:[2,61],70:[2,61],71:[2,61],73:[2,61],75:[2,61],76:[2,61],77:[2,61],82:[2,61],83:[2,61],84:[2,61],85:[2,61],86:[2,61],88:[2,61]},{1:[2,62],6:[2,62],8:[2,62],13:[2,62],19:[2,62],22:[2,62],25:[2,62],26:[2,62],27:[2,62],28:[2,62],29:[2,62],30:[2,62],31:[2,62],32:[2,62],33:[2,62],34:[2,62],35:[2,62],36:[2,62],41:[2,62],46:[2,62],51:[2,62],62:[2,62],67:[2,62],68:[2,62],70:[2,62],71:[2,62],73:[2,62],75:[2,62],76:[2,62],77:[2,62],82:[2,62],83:[2,62],84:[2,62],85:[2,62],86:[2,62],88:[2,62]},{1:[2,63],6:[2,63],8:[2,63],13:[2,63],19:[2,63],22:[2,63],25:[2,63],26:[2,63],27:[2,63],28:[2,63],29:[2,63],30:[2,63],31:[2,63],32:[2,63],33:[2,63],34:[2,63],35:[2,63],36:[2,63],41:[2,63],46:[2,63],51:[2,63],62:[2,63],67:[2,63],68:[2,63],70:[2,63],71:[2,63],73:[2,63],75:[2,63],76:[2,63],77:[2,63],82:[2,63],83:[2,63],84:[2,63],85:[2,63],86:[2,63],88:[2,63]},{1:[2,64],6:[2,64],8:[2,64],13:[2,64],19:[2,64],22:[2,64],25:[2,64],26:[2,64],27:[2,64],28:[2,64],29:[2,64],30:[2,64],31:[2,64],32:[2,64],33:[2,64],34:[2,64],35:[2,64],36:[2,64],41:[2,64],46:[2,64],51:[2,64],62:[2,64],67:[2,64],68:[2,64],70:[2,64],71:[2,64],73:[2,64],75:[2,64],76:[2,64],77:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64],86:[2,64],88:[2,64]},{1:[2,65],6:[2,65],8:[2,65],13:[2,65],19:[2,65],22:[2,65],25:[2,65],26:[2,65],27:[2,65],28:[2,65],29:[2,65],30:[2,65],31:[2,65],32:[2,65],33:[2,65],34:[2,65],35:[2,65],36:[2,65],41:[2,65],46:[2,65],51:[2,65],62:[2,65],67:[2,65],68:[2,65],70:[2,65],71:[2,65],73:[2,65],75:[2,65],76:[2,65],77:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65],86:[2,65],88:[2,65]},{1:[2,66],6:[2,66],8:[2,66],13:[2,66],19:[2,66],22:[2,66],25:[2,66],26:[2,66],27:[2,66],28:[2,66],29:[2,66],30:[2,66],31:[2,66],32:[2,66],33:[2,66],34:[2,66],35:[2,66],36:[2,66],41:[2,66],46:[2,66],51:[2,66],62:[2,66],67:[2,66],68:[2,66],70:[2,66],71:[2,66],73:[2,66],75:[2,66],76:[2,66],77:[2,66],82:[2,66],83:[2,66],84:[2,66],85:[2,66],86:[2,66],88:[2,66]},{1:[2,67],6:[2,67],8:[2,67],13:[2,67],19:[2,67],22:[2,67],25:[2,67],26:[2,67],27:[2,67],28:[2,67],29:[2,67],30:[2,67],31:[2,67],32:[2,67],33:[2,67],34:[2,67],35:[2,67],36:[2,67],41:[2,67],46:[2,67],51:[2,67],62:[2,67],67:[2,67],68:[2,67],70:[2,67],71:[2,67],73:[2,67],75:[2,67],76:[2,67],77:[2,67],82:[2,67],83:[2,67],84:[2,67],85:[2,67],86:[2,67],88:[2,67]},{1:[2,68],6:[2,68],8:[2,68],13:[2,68],19:[2,68],22:[2,68],25:[2,68],26:[2,68],27:[2,68],28:[2,68],29:[2,68],30:[2,68],31:[2,68],32:[2,68],33:[2,68],34:[2,68],35:[2,68],36:[2,68],41:[2,68],46:[2,68],51:[2,68],62:[2,68],67:[2,68],68:[2,68],70:[2,68],71:[2,68],73:[2,68],75:[2,68],76:[2,68],77:[2,68],82:[2,68],83:[2,68],84:[2,68],85:[2,68],86:[2,68],88:[2,68]},{1:[2,69],6:[2,69],8:[2,69],13:[2,69],19:[2,69],22:[2,69],25:[2,69],26:[2,69],27:[2,69],28:[2,69],29:[2,69],30:[2,69],31:[2,69],32:[2,69],33:[2,69],34:[2,69],35:[2,69],36:[2,69],41:[2,69],46:[2,69],51:[2,69],62:[2,69],67:[2,69],68:[2,69],70:[2,69],71:[2,69],73:[2,69],75:[2,69],76:[2,69],77:[2,69],82:[2,69],83:[2,69],84:[2,69],85:[2,69],86:[2,69],88:[2,69]},{1:[2,70],6:[2,70],8:[2,70],13:[2,70],19:[2,70],22:[2,70],25:[2,70],26:[2,70],27:[2,70],28:[2,70],29:[2,70],30:[2,70],31:[2,70],32:[2,70],33:[2,70],34:[2,70],35:[2,70],36:[2,70],41:[2,70],46:[2,70],51:[2,70],62:[2,70],67:[2,70],68:[2,70],70:[2,70],71:[2,70],73:[2,70],75:[2,70],76:[2,70],77:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70],86:[2,70],88:[2,70]},{1:[2,71],6:[2,71],8:[2,71],13:[2,71],19:[2,71],22:[2,71],25:[2,71],26:[2,71],27:[2,71],28:[2,71],29:[2,71],30:[2,71],31:[2,71],32:[2,71],33:[2,71],34:[2,71],35:[2,71],36:[2,71],41:[2,71],46:[2,71],51:[2,71],62:[2,71],67:[2,71],68:[2,71],70:[2,71],71:[2,71],73:[2,71],75:[2,71],76:[2,71],77:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71],86:[2,71],88:[2,71]},{1:[2,72],6:[2,72],8:[2,72],13:[2,72],19:[2,72],22:[2,72],25:[2,72],26:[2,72],27:[2,72],28:[2,72],29:[2,72],30:[2,72],31:[2,72],32:[2,72],33:[2,72],34:[2,72],35:[2,72],36:[2,72],41:[2,72],46:[2,72],51:[2,72],62:[2,72],67:[2,72],68:[2,72],70:[2,72],71:[2,72],73:[2,72],75:[2,72],76:[2,72],77:[2,72],82:[2,72],83:[2,72],84:[2,72],85:[2,72],86:[2,72],88:[2,72]},{1:[2,73],6:[2,73],8:[2,73],13:[2,73],19:[2,73],22:[2,73],25:[2,73],26:[2,73],27:[2,73],28:[2,73],29:[2,73],30:[2,73],31:[2,73],32:[2,73],33:[2,73],34:[2,73],35:[2,73],36:[2,73],41:[2,73],46:[2,73],51:[2,73],62:[2,73],67:[2,73],68:[2,73],70:[2,73],71:[2,73],73:[2,73],75:[2,73],76:[2,73],77:[2,73],82:[2,73],83:[2,73],84:[2,73],85:[2,73],86:[2,73],88:[2,73]},{6:[2,86],8:[2,86],13:[2,86],19:[2,86],22:[2,86],25:[2,86],26:[2,86],27:[2,86],28:[2,86],29:[2,86],30:[2,86],31:[2,86],32:[2,86],33:[2,86],34:[2,86],35:[2,86],36:[2,86],41:[2,86],46:[2,86],51:[2,86],62:[2,86],67:[2,86],68:[2,86],70:[2,86],71:[2,86],72:59,73:[2,86],75:[2,86],76:[2,86],77:[2,86],84:[2,86],86:[2,86],88:[2,86]},{46:[1,60]},{1:[2,59],6:[2,59],8:[2,59],13:[2,59],19:[2,59],22:[2,59],25:[2,59],26:[2,59],27:[2,59],28:[2,59],29:[2,59],30:[2,59],31:[2,59],32:[2,59],33:[2,59],34:[2,59],35:[2,59],36:[2,59],41:[2,59],46:[2,59],51:[2,59],62:[2,59],67:[2,59],68:[2,59],70:[2,59],71:[2,59],73:[2,59],75:[2,59],76:[2,59],77:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59],86:[2,59],88:[2,59]},{19:[1,61]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:62,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{19:[1,63]},{19:[1,64]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:65,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:66,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{6:[2,12],8:[2,12],13:[2,12],16:68,17:67,19:[2,12],22:[2,12],25:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],41:[2,12],46:[2,12],86:[2,12]},{31:[1,70],46:[2,105],69:69},{31:[1,70],46:[2,105],69:71},{19:[1,72]},{25:[1,20],48:73},{19:[1,74]},{6:[2,12],8:[2,12],13:[2,12],16:75,19:[2,12],20:[2,12],22:[2,12],25:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],41:[2,12],46:[2,12],86:[2,12]},{19:[2,105],31:[1,70],69:76},{6:[2,74],8:[2,74],13:[2,74],19:[2,74],22:[2,74],25:[2,74],27:[2,74],28:[2,74],29:[2,74],30:[2,74],31:[2,74],32:[2,74],33:[2,74],34:[2,74],35:[2,74],36:[2,74],41:[2,74],46:[2,74],51:[2,74],62:[2,74],67:[2,74],68:[2,74],70:[2,74],71:[2,74],73:[2,74],75:[2,74],76:[2,74],77:[2,74],84:[2,74],86:[2,74],88:[2,74]},{6:[2,19],8:[2,19],13:[2,19],19:[2,19],20:[2,19],22:[2,19],23:[2,19],25:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],30:[2,19],31:[2,19],32:[2,19],33:[2,19],34:[2,19],35:[2,19],36:[2,19],41:[2,19],46:[2,19],86:[2,19]},{6:[2,20],8:[2,20],13:[2,20],19:[2,20],20:[2,20],22:[2,20],23:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[2,20],29:[2,20],30:[2,20],31:[2,20],32:[2,20],33:[2,20],34:[2,20],35:[2,20],36:[2,20],41:[2,20],46:[2,20],86:[2,20]},{6:[2,21],8:[2,21],13:[2,21],19:[2,21],20:[2,21],22:[2,21],23:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[2,21],29:[2,21],30:[2,21],31:[2,21],32:[2,21],33:[2,21],34:[2,21],35:[2,21],36:[2,21],41:[2,21],46:[2,21],86:[2,21]},{6:[2,22],8:[2,22],13:[2,22],19:[2,22],20:[2,22],22:[2,22],23:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],30:[2,22],31:[2,22],32:[2,22],33:[2,22],34:[2,22],35:[2,22],36:[2,22],41:[2,22],46:[2,22],86:[2,22]},{6:[2,23],8:[2,23],13:[2,23],19:[2,23],20:[2,23],22:[2,23],23:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],30:[2,23],31:[2,23],32:[2,23],33:[2,23],34:[2,23],35:[2,23],36:[2,23],41:[2,23],46:[2,23],86:[2,23]},{6:[2,24],8:[2,24],13:[2,24],19:[2,24],20:[2,24],22:[2,24],23:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],30:[2,24],31:[2,24],32:[2,24],33:[2,24],34:[2,24],35:[2,24],36:[2,24],41:[2,24],46:[2,24],86:[2,24]},{6:[2,25],8:[2,25],13:[2,25],19:[2,25],20:[2,25],22:[2,25],23:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],30:[2,25],31:[2,25],32:[2,25],33:[2,25],34:[2,25],35:[2,25],36:[2,25],41:[2,25],46:[2,25],86:[2,25]},{6:[2,26],8:[2,26],13:[2,26],19:[2,26],20:[2,26],22:[2,26],23:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],30:[2,26],31:[2,26],32:[2,26],33:[2,26],34:[2,26],35:[2,26],36:[2,26],41:[2,26],46:[2,26],86:[2,26]},{6:[2,27],8:[2,27],13:[2,27],19:[2,27],20:[2,27],22:[2,27],23:[2,27],25:[2,27],26:[2,27],27:[2,27],28:[2,27],29:[2,27],30:[2,27],31:[2,27],32:[2,27],33:[2,27],34:[2,27],35:[2,27],36:[2,27],41:[2,27],46:[2,27],86:[2,27]},{6:[2,28],8:[2,28],13:[2,28],19:[2,28],20:[2,28],22:[2,28],23:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],30:[2,28],31:[2,28],32:[2,28],33:[2,28],34:[2,28],35:[2,28],36:[2,28],41:[2,28],46:[2,28],86:[2,28]},{6:[2,29],8:[2,29],13:[2,29],19:[2,29],20:[2,29],22:[2,29],23:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],30:[2,29],31:[2,29],32:[2,29],33:[2,29],34:[2,29],35:[2,29],36:[2,29],41:[2,29],46:[2,29],86:[2,29]},{6:[2,30],8:[2,30],13:[2,30],19:[2,30],20:[2,30],22:[2,30],23:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],30:[2,30],31:[2,30],32:[2,30],33:[2,30],34:[2,30],35:[2,30],36:[2,30],41:[2,30],46:[2,30],86:[2,30]},{6:[2,31],8:[2,31],13:[2,31],19:[2,31],20:[2,31],22:[2,31],23:[2,31],25:[2,31],26:[2,31],27:[2,31],28:[2,31],29:[2,31],30:[2,31],31:[2,31],32:[2,31],33:[2,31],34:[2,31],35:[2,31],36:[2,31],41:[2,31],46:[2,31],86:[2,31]},{6:[2,32],8:[2,32],13:[2,32],19:[2,32],20:[2,32],22:[2,32],23:[2,32],25:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],30:[2,32],31:[2,32],32:[2,32],33:[2,32],34:[2,32],35:[2,32],36:[2,32],41:[2,32],46:[2,32],86:[2,32]},{6:[2,1],8:[2,1],13:[2,1],19:[2,1],20:[2,1],22:[2,1],23:[2,1],25:[2,1],26:[2,1],27:[2,1],28:[2,1],29:[2,1],30:[2,1],31:[2,1],32:[2,1],33:[2,1],34:[2,1],35:[2,1],36:[2,1],41:[2,1],46:[2,1],86:[2,1]},{6:[2,2],8:[2,2],13:[2,2],19:[2,2],20:[2,2],22:[2,2],23:[2,2],25:[2,2],26:[2,2],27:[2,2],28:[2,2],29:[2,2],30:[2,2],31:[2,2],32:[2,2],33:[2,2],34:[2,2],35:[2,2],36:[2,2],41:[2,2],46:[2,2],86:[2,2]},{6:[2,12],8:[2,12],13:[2,12],16:68,17:77,19:[2,12],20:[2,12],22:[2,12],25:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],41:[2,12],86:[2,12]},{6:[2,12],8:[2,12],13:[2,12],16:68,17:78,19:[2,12],22:[2,12],23:[2,12],25:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],41:[2,12],86:[2,12]},{19:[1,79]},{6:[2,6],7:80,10:[2,6]},{7:81,8:[2,6],10:[2,6]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],26:[1,82],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:5,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{1:[2,58],6:[2,58],8:[2,58],13:[2,58],19:[2,58],22:[2,58],25:[2,58],26:[2,58],27:[2,58],28:[2,58],29:[2,58],30:[2,58],31:[2,58],32:[2,58],33:[2,58],34:[2,58],35:[2,58],36:[2,58],41:[2,58],46:[2,58],51:[2,58],62:[2,58],67:[2,58],68:[2,58],70:[2,58],71:[2,58],73:[2,58],75:[2,58],76:[2,58],77:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58],86:[2,58],88:[2,58]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],20:[2,56],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:84,46:[2,56],74:83},{76:[1,85]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],20:[2,56],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:86},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],20:[2,56],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:87},{1:[2,104],6:[2,104],8:[2,104],13:[2,104],19:[2,104],22:[2,104],25:[2,104],26:[2,104],27:[2,104],28:[2,104],29:[2,104],30:[2,104],31:[2,104],32:[2,104],33:[2,104],34:[2,104],35:[2,104],36:[2,104],41:[2,104],46:[2,104],51:[2,104],62:[2,104],67:[2,104],68:[2,104],70:[2,104],71:[2,104],73:[2,104],75:[2,104],76:[2,104],77:[2,104],82:[2,104],83:[2,104],84:[2,104],85:[2,104],86:[2,104],88:[2,104]},{1:[2,75],6:[2,75],8:[2,75],13:[2,75],19:[2,75],22:[2,75],25:[2,75],26:[2,75],27:[2,75],28:[2,75],29:[2,75],30:[2,75],31:[2,75],32:[2,75],33:[2,75],34:[2,75],35:[2,75],36:[2,75],41:[2,75],46:[2,75],51:[2,75],62:[2,75],67:[2,75],68:[2,75],70:[2,75],71:[2,75],73:[2,75],75:[2,75],76:[2,75],77:[2,75],82:[2,75],83:[2,75],84:[2,75],85:[2,75],86:[2,75],88:[2,75]},{46:[1,88]},{3:46,4:52,5:53,6:[1,57],8:[1,58],11:89,12:90,13:[1,91],14:92,15:93,18:47,19:[1,54],20:[2,14],21:48,22:[1,55],23:[2,14],25:[1,94],26:[2,14],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],46:[2,14],86:[1,36]},{46:[1,95]},{19:[2,106],46:[2,106]},{46:[1,96]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],20:[2,56],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:97},{1:[2,77],6:[2,77],8:[2,77],13:[2,77],19:[2,77],22:[2,77],25:[2,77],26:[2,77],27:[2,77],28:[2,77],29:[2,77],30:[2,77],31:[2,77],32:[2,77],33:[2,77],34:[2,77],35:[2,77],36:[2,77],41:[2,77],46:[2,77],51:[2,77],62:[2,77],63:98,65:[1,99],66:[2,77],67:[2,77],68:[2,77],70:[2,77],71:[2,77],73:[2,77],75:[2,77],76:[2,77],77:[2,77],82:[2,77],83:[2,77],84:[2,77],85:[2,77],86:[2,77],88:[2,77]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],20:[2,56],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:100},{3:46,4:52,5:53,6:[1,57],8:[1,58],11:89,12:90,13:[1,91],14:92,15:93,18:47,19:[1,54],20:[2,57],21:48,22:[1,55],25:[1,94],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],46:[2,57],86:[1,36]},{19:[1,101]},{20:[1,102]},{23:[1,103]},{3:115,4:52,5:53,6:[1,57],8:[1,58],13:[1,121],14:122,15:123,18:116,19:[1,54],20:[2,52],22:[1,124],24:117,25:[1,94],27:[1,109],29:[1,112],30:[1,110],31:[1,113],32:[1,114],33:[1,111],35:[1,118],36:[1,119],37:120,38:108,39:107,40:106,41:[1,56],42:104,43:105,86:[1,36]},{6:[1,125],10:[1,126]},{8:[1,127],10:[1,126]},{1:[2,85],6:[2,85],8:[2,85],13:[2,85],19:[2,85],20:[2,85],22:[2,85],23:[2,85],25:[2,85],26:[2,85],27:[2,85],28:[2,85],29:[2,85],30:[2,85],31:[2,85],32:[2,85],33:[2,85],34:[2,85],35:[2,85],36:[2,85],41:[2,85],46:[2,85],51:[2,85],62:[2,85],65:[2,85],66:[2,85],67:[2,85],68:[2,85],70:[2,85],71:[2,85],73:[2,85],75:[2,85],76:[2,85],77:[2,85],82:[2,85],83:[2,85],84:[2,85],85:[2,85],86:[2,85],88:[2,85]},{20:[1,128]},{20:[2,102],46:[1,129]},{19:[1,130]},{20:[1,131]},{20:[1,132]},{1:[2,81],6:[2,81],8:[2,81],13:[2,81],19:[2,81],22:[2,81],25:[2,81],26:[2,81],27:[2,81],28:[2,81],29:[2,81],30:[2,81],31:[2,81],32:[2,81],33:[2,81],34:[2,81],35:[2,81],36:[2,81],41:[2,81],46:[2,81],51:[2,81],62:[2,81],67:[2,81],68:[2,81],70:[2,81],71:[2,81],73:[2,81],75:[2,81],76:[2,81],77:[2,81],82:[2,81],83:[2,81],84:[2,81],85:[2,81],86:[2,81],88:[2,81]},{6:[2,13],8:[2,13],13:[2,13],19:[2,13],20:[2,13],22:[2,13],23:[2,13],25:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13],30:[2,13],31:[2,13],32:[2,13],33:[2,13],34:[2,13],35:[2,13],36:[2,13],41:[2,13],46:[2,13],86:[2,13]},{6:[2,8],8:[2,8],13:[2,8],19:[2,8],20:[2,8],22:[2,8],23:[2,8],25:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8],30:[2,8],31:[2,8],32:[2,8],33:[2,8],34:[2,8],35:[2,8],36:[2,8],41:[2,8],46:[2,8],86:[2,8]},{6:[2,9],8:[2,9],13:[2,9],19:[2,9],20:[2,9],22:[2,9],23:[2,9],25:[2,9],26:[2,9],27:[2,9],28:[2,9],29:[2,9],30:[2,9],31:[2,9],32:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9],41:[2,9],46:[2,9],86:[2,9]},{6:[2,10],8:[2,10],13:[2,10],19:[2,10],20:[2,10],22:[2,10],23:[2,10],25:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10],30:[2,10],31:[2,10],32:[2,10],33:[2,10],34:[2,10],35:[2,10],36:[2,10],41:[2,10],46:[2,10],86:[2,10]},{6:[2,11],8:[2,11],13:[2,11],19:[2,11],20:[2,11],22:[2,11],23:[2,11],25:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11],30:[2,11],31:[2,11],32:[2,11],33:[2,11],34:[2,11],35:[2,11],36:[2,11],41:[2,11],46:[2,11],86:[2,11]},{6:[2,12],8:[2,12],13:[2,12],16:68,17:133,19:[2,12],22:[2,12],25:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],41:[2,12],86:[2,12]},{1:[2,83],6:[2,83],8:[2,83],13:[2,83],19:[2,83],22:[2,83],25:[2,83],26:[2,83],27:[2,83],28:[2,83],29:[2,83],30:[2,83],31:[2,83],32:[2,83],33:[2,83],34:[2,83],35:[2,83],36:[2,83],41:[2,83],46:[2,83],51:[2,83],62:[2,83],67:[2,83],68:[2,83],70:[2,83],71:[2,83],73:[2,83],75:[2,83],76:[2,83],77:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83],86:[2,83],88:[2,83]},{1:[2,82],6:[2,82],8:[2,82],13:[2,82],19:[2,82],22:[2,82],25:[2,82],26:[2,82],27:[2,82],28:[2,82],29:[2,82],30:[2,82],31:[2,82],32:[2,82],33:[2,82],34:[2,82],35:[2,82],36:[2,82],41:[2,82],46:[2,82],51:[2,82],62:[2,82],67:[2,82],68:[2,82],70:[2,82],71:[2,82],73:[2,82],75:[2,82],76:[2,82],77:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82],86:[2,82],88:[2,82]},{20:[1,134]},{1:[2,79],6:[2,79],8:[2,79],13:[2,79],19:[2,79],22:[2,79],25:[2,79],26:[2,79],27:[2,79],28:[2,79],29:[2,79],30:[2,79],31:[2,79],32:[2,79],33:[2,79],34:[2,79],35:[2,79],36:[2,79],41:[2,79],46:[2,79],51:[2,79],62:[2,79],64:135,66:[1,136],67:[2,79],68:[2,79],70:[2,79],71:[2,79],73:[2,79],75:[2,79],76:[2,79],77:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79],86:[2,79],88:[2,79]},{19:[1,137]},{20:[1,138]},{20:[2,110],31:[1,142],87:139,89:140,90:141},{6:[2,15],8:[2,15],13:[2,15],19:[2,15],20:[2,15],22:[2,15],23:[2,15],25:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15],30:[2,15],31:[2,15],32:[2,15],33:[2,15],34:[2,15],35:[2,15],36:[2,15],41:[2,15],46:[2,15],86:[2,15]},{6:[2,16],8:[2,16],13:[2,16],19:[2,16],20:[2,16],22:[2,16],23:[2,16],25:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],30:[2,16],31:[2,16],32:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16],41:[2,16],46:[2,16],86:[2,16]},{20:[1,143]},{20:[2,53],28:[1,144]},{20:[2,54],28:[2,54]},{3:115,4:52,5:53,6:[1,57],8:[1,58],13:[1,121],14:122,15:123,18:116,19:[1,54],20:[2,50],22:[1,124],24:117,25:[1,94],27:[1,109],28:[2,50],29:[1,112],30:[1,110],31:[1,113],32:[1,114],33:[1,111],35:[1,118],36:[1,119],37:120,38:145,41:[1,56],86:[1,36]},{6:[2,48],8:[2,48],13:[2,48],19:[2,48],20:[2,48],22:[2,48],25:[2,48],27:[2,48],28:[2,48],29:[2,48],30:[2,48],31:[2,48],32:[2,48],33:[2,48],35:[2,48],36:[2,48],41:[2,48],86:[2,48]},{6:[2,33],8:[2,33],13:[2,33],19:[2,33],20:[2,33],22:[2,33],25:[2,33],27:[2,33],28:[2,33],29:[2,33],30:[2,33],31:[2,33],32:[2,33],33:[2,33],35:[2,33],36:[2,33],41:[2,33],86:[2,33]},{6:[2,34],8:[2,34],13:[2,34],19:[2,34],20:[2,34],22:[2,34],25:[2,34],27:[2,34],28:[2,34],29:[2,34],30:[2,34],31:[2,34],32:[2,34],33:[2,34],35:[2,34],36:[2,34],41:[2,34],86:[2,34]},{6:[2,35],8:[2,35],13:[2,35],19:[2,35],20:[2,35],22:[2,35],25:[2,35],27:[2,35],28:[2,35],29:[2,35],30:[2,35],31:[2,35],32:[2,35],33:[2,35],35:[2,35],36:[2,35],41:[2,35],86:[2,35]},{6:[2,36],8:[2,36],13:[2,36],19:[2,36],20:[2,36],22:[2,36],25:[2,36],27:[2,36],28:[2,36],29:[2,36],30:[2,36],31:[2,36],32:[2,36],33:[2,36],35:[2,36],36:[2,36],41:[2,36],86:[2,36]},{6:[2,37],8:[2,37],13:[2,37],19:[2,37],20:[2,37],22:[2,37],25:[2,37],27:[2,37],28:[2,37],29:[2,37],30:[2,37],31:[2,37],32:[2,37],33:[2,37],35:[2,37],36:[2,37],41:[2,37],86:[2,37]},{6:[2,38],8:[2,38],13:[2,38],19:[2,38],20:[2,38],22:[2,38],25:[2,38],27:[2,38],28:[2,38],29:[2,38],30:[2,38],31:[2,38],32:[2,38],33:[2,38],35:[2,38],36:[2,38],41:[2,38],86:[2,38]},{6:[2,39],8:[2,39],13:[2,39],19:[2,39],20:[2,39],22:[2,39],25:[2,39],27:[2,39],28:[2,39],29:[2,39],30:[2,39],31:[2,39],32:[2,39],33:[2,39],35:[2,39],36:[2,39],41:[2,39],86:[2,39]},{6:[2,40],8:[2,40],13:[2,40],19:[2,40],20:[2,40],22:[2,40],25:[2,40],27:[2,40],28:[2,40],29:[2,40],30:[2,40],31:[2,40],32:[2,40],33:[2,40],35:[2,40],36:[2,40],41:[2,40],86:[2,40]},{6:[2,41],8:[2,41],13:[2,41],19:[2,41],20:[2,41],22:[2,41],25:[2,41],27:[2,41],28:[2,41],29:[2,41],30:[2,41],31:[2,41],32:[2,41],33:[2,41],35:[2,41],36:[2,41],41:[2,41],86:[2,41]},{6:[2,42],8:[2,42],13:[2,42],19:[2,42],20:[2,42],22:[2,42],25:[2,42],27:[2,42],28:[2,42],29:[2,42],30:[2,42],31:[2,42],32:[2,42],33:[2,42],35:[2,42],36:[2,42],41:[2,42],86:[2,42]},{6:[2,43],8:[2,43],13:[2,43],19:[2,43],20:[2,43],22:[2,43],25:[2,43],27:[2,43],28:[2,43],29:[2,43],30:[2,43],31:[2,43],32:[2,43],33:[2,43],35:[2,43],36:[2,43],41:[2,43],86:[2,43]},{6:[2,44],8:[2,44],13:[2,44],19:[2,44],20:[2,44],22:[2,44],25:[2,44],27:[2,44],28:[2,44],29:[2,44],30:[2,44],31:[2,44],32:[2,44],33:[2,44],35:[2,44],36:[2,44],41:[2,44],86:[2,44]},{6:[2,45],8:[2,45],13:[2,45],19:[2,45],20:[2,45],22:[2,45],25:[2,45],27:[2,45],28:[2,45],29:[2,45],30:[2,45],31:[2,45],32:[2,45],33:[2,45],35:[2,45],36:[2,45],41:[2,45],86:[2,45]},{6:[2,46],8:[2,46],13:[2,46],19:[2,46],20:[2,46],22:[2,46],25:[2,46],27:[2,46],28:[2,46],29:[2,46],30:[2,46],31:[2,46],32:[2,46],33:[2,46],35:[2,46],36:[2,46],41:[2,46],86:[2,46]},{6:[2,47],8:[2,47],13:[2,47],19:[2,47],20:[2,47],22:[2,47],25:[2,47],27:[2,47],28:[2,47],29:[2,47],30:[2,47],31:[2,47],32:[2,47],33:[2,47],35:[2,47],36:[2,47],41:[2,47],86:[2,47]},{6:[2,12],8:[2,12],13:[2,12],16:68,17:146,19:[2,12],22:[2,12],23:[2,12],25:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],41:[2,12],86:[2,12]},{6:[2,3],8:[2,3],13:[2,3],19:[2,3],20:[2,3],22:[2,3],23:[2,3],25:[2,3],26:[2,3],27:[2,3],28:[2,3],29:[2,3],30:[2,3],31:[2,3],32:[2,3],33:[2,3],34:[2,3],35:[2,3],36:[2,3],41:[2,3],46:[2,3],86:[2,3]},{6:[2,7],8:[2,7],10:[2,7]},{6:[2,4],8:[2,4],13:[2,4],19:[2,4],20:[2,4],22:[2,4],23:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],30:[2,4],31:[2,4],32:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4],41:[2,4],46:[2,4],86:[2,4]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:147,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:148,46:[2,56]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],20:[2,56],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:149},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:150,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:151,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{26:[1,152]},{25:[1,153]},{1:[2,76],6:[2,76],8:[2,76],13:[2,76],19:[2,76],22:[2,76],25:[2,76],26:[2,76],27:[2,76],28:[2,76],29:[2,76],30:[2,76],31:[2,76],32:[2,76],33:[2,76],34:[2,76],35:[2,76],36:[2,76],41:[2,76],46:[2,76],51:[2,76],62:[2,76],67:[2,76],68:[2,76],70:[2,76],71:[2,76],73:[2,76],75:[2,76],76:[2,76],77:[2,76],82:[2,76],83:[2,76],84:[2,76],85:[2,76],86:[2,76],88:[2,76]},{25:[1,20],48:154},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],20:[2,56],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:155},{25:[1,20],48:156},{20:[1,157]},{20:[2,111],28:[1,158]},{20:[2,107],28:[2,107]},{20:[2,109],28:[2,109]},{6:[2,51],8:[2,51],13:[2,51],19:[2,51],20:[2,51],22:[2,51],23:[2,51],25:[2,51],26:[2,51],27:[2,51],28:[2,51],29:[2,51],30:[2,51],31:[2,51],32:[2,51],33:[2,51],34:[2,51],35:[2,51],36:[2,51],41:[2,51],46:[2,51],86:[2,51]},{3:115,4:52,5:53,6:[1,57],8:[1,58],13:[1,121],14:122,15:123,18:116,19:[1,54],22:[1,124],24:117,25:[1,94],27:[1,109],29:[1,112],30:[1,110],31:[1,113],32:[1,114],33:[1,111],35:[1,118],36:[1,119],37:120,38:108,39:107,40:159,41:[1,56],86:[1,36]},{6:[2,49],8:[2,49],13:[2,49],19:[2,49],20:[2,49],22:[2,49],25:[2,49],27:[2,49],28:[2,49],29:[2,49],30:[2,49],31:[2,49],32:[2,49],33:[2,49],35:[2,49],36:[2,49],41:[2,49],86:[2,49]},{23:[1,160]},{1:[2,88],6:[2,88],8:[2,88],13:[2,88],19:[2,88],22:[2,88],25:[2,88],26:[2,88],27:[2,88],28:[2,88],29:[2,88],30:[2,88],31:[2,88],32:[2,88],33:[2,88],34:[2,88],35:[2,88],36:[2,88],41:[2,88],46:[2,88],51:[2,88],62:[2,88],67:[2,88],68:[2,88],70:[2,88],71:[2,88],73:[2,88],75:[2,88],76:[2,88],77:[2,88],82:[2,88],83:[2,88],84:[2,88],85:[2,88],86:[2,88],88:[2,88]},{46:[1,161]},{20:[1,162]},{1:[2,90],6:[2,90],8:[2,90],13:[2,90],19:[2,90],22:[2,90],25:[2,90],26:[2,90],27:[2,90],28:[2,90],29:[2,90],30:[2,90],31:[2,90],32:[2,90],33:[2,90],34:[2,90],35:[2,90],36:[2,90],41:[2,90],46:[2,90],51:[2,90],62:[2,90],67:[2,90],68:[2,90],70:[2,90],71:[2,90],73:[2,90],75:[2,90],76:[2,90],77:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90],86:[2,90],88:[2,90]},{1:[2,99],6:[2,99],8:[2,99],13:[2,99],19:[2,99],22:[2,99],25:[2,99],26:[2,99],27:[2,99],28:[2,99],29:[2,99],30:[2,99],31:[2,99],32:[2,99],33:[2,99],34:[2,99],35:[2,99],36:[2,99],41:[2,99],46:[2,99],51:[2,99],62:[2,99],67:[2,99],68:[2,99],70:[2,99],71:[2,99],73:[2,99],75:[2,99],76:[2,99],77:[2,99],82:[2,99],83:[2,99],84:[2,99],85:[1,163],86:[2,99],88:[2,99]},{6:[2,18],8:[2,18],13:[2,18],19:[2,18],20:[2,18],22:[2,18],23:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],30:[2,18],31:[2,18],32:[2,18],33:[2,18],34:[2,18],35:[2,18],36:[2,18],41:[2,18],46:[2,18],86:[2,18]},{26:[2,92],78:164,82:[2,92],83:[2,92]},{1:[2,80],6:[2,80],8:[2,80],13:[2,80],19:[2,80],22:[2,80],25:[2,80],26:[2,80],27:[2,80],28:[2,80],29:[2,80],30:[2,80],31:[2,80],32:[2,80],33:[2,80],34:[2,80],35:[2,80],36:[2,80],41:[2,80],46:[2,80],51:[2,80],62:[2,80],67:[2,80],68:[2,80],70:[2,80],71:[2,80],73:[2,80],75:[2,80],76:[2,80],77:[2,80],82:[2,80],83:[2,80],84:[2,80],85:[2,80],86:[2,80],88:[2,80]},{20:[1,165]},{1:[2,84],6:[2,84],8:[2,84],13:[2,84],19:[2,84],22:[2,84],25:[2,84],26:[2,84],27:[2,84],28:[2,84],29:[2,84],30:[2,84],31:[2,84],32:[2,84],33:[2,84],34:[2,84],35:[2,84],36:[2,84],41:[2,84],46:[2,84],51:[2,84],62:[2,84],67:[2,84],68:[2,84],70:[2,84],71:[2,84],73:[2,84],75:[2,84],76:[2,84],77:[2,84],82:[2,84],83:[2,84],84:[2,84],85:[2,84],86:[2,84],88:[2,84]},{25:[1,20],48:166},{31:[1,142],90:167},{20:[2,55],28:[2,55]},{6:[2,17],8:[2,17],13:[2,17],19:[2,17],20:[2,17],22:[2,17],25:[2,17],27:[2,17],28:[2,17],29:[2,17],30:[2,17],31:[2,17],32:[2,17],33:[2,17],35:[2,17],36:[2,17],41:[2,17],86:[2,17]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,18:47,19:[1,54],20:[2,56],21:48,22:[1,55],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:168},{1:[2,89],6:[2,89],8:[2,89],13:[2,89],19:[2,89],22:[2,89],25:[2,89],26:[2,89],27:[2,89],28:[2,89],29:[2,89],30:[2,89],31:[2,89],32:[2,89],33:[2,89],34:[2,89],35:[2,89],36:[2,89],41:[2,89],46:[2,89],51:[2,89],62:[2,89],67:[2,89],68:[2,89],70:[2,89],71:[2,89],73:[2,89],75:[2,89],76:[2,89],77:[2,89],82:[2,89],83:[2,89],84:[2,89],85:[2,89],86:[2,89],88:[2,89]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:169,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],84:[1,26],86:[1,36],88:[1,27]},{26:[1,170],79:171,80:172,82:[1,173],83:[1,174]},{25:[1,20],48:175},{1:[2,103],6:[2,103],8:[2,103],13:[2,103],19:[2,103],20:[2,103],22:[2,103],23:[2,103],25:[2,103],26:[2,103],27:[2,103],28:[2,103],29:[2,103],30:[2,103],31:[2,103],32:[2,103],33:[2,103],34:[2,103],35:[2,103],36:[2,103],41:[2,103],46:[2,103],51:[2,103],62:[2,103],67:[2,103],68:[2,103],70:[2,103],71:[2,103],73:[2,103],75:[2,103],76:[2,103],77:[2,103],82:[2,103],83:[2,103],84:[2,103],85:[2,103],86:[2,103],88:[2,103]},{20:[2,108],28:[2,108]},{20:[2,101]},{1:[2,100],6:[2,100],8:[2,100],13:[2,100],19:[2,100],22:[2,100],25:[2,100],26:[2,100],27:[2,100],28:[2,100],29:[2,100],30:[2,100],31:[2,100],32:[2,100],33:[2,100],34:[2,100],35:[2,100],36:[2,100],41:[2,100],46:[2,100],51:[2,100],62:[2,100],67:[2,100],68:[2,100],70:[2,100],71:[2,100],73:[2,100],75:[2,100],76:[2,100],77:[2,100],82:[2,100],83:[2,100],84:[2,100],85:[2,100],86:[2,100],88:[2,100]},{1:[2,91],6:[2,91],8:[2,91],13:[2,91],19:[2,91],22:[2,91],25:[2,91],26:[2,91],27:[2,91],28:[2,91],29:[2,91],30:[2,91],31:[2,91],32:[2,91],33:[2,91],34:[2,91],35:[2,91],36:[2,91],41:[2,91],46:[2,91],51:[2,91],62:[2,91],67:[2,91],68:[2,91],70:[2,91],71:[2,91],73:[2,91],75:[2,91],76:[2,91],77:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91],86:[2,91],88:[2,91]},{26:[2,93],82:[2,93],83:[2,93]},{6:[2,86],8:[2,86],13:[2,86],19:[2,86],22:[2,86],25:[2,86],26:[2,86],27:[2,86],28:[2,86],29:[2,86],30:[2,86],31:[2,86],32:[2,86],33:[2,86],34:[2,86],35:[2,86],36:[2,86],41:[2,86],46:[2,86],51:[2,86],62:[2,86],67:[2,86],68:[2,86],70:[2,86],71:[2,86],72:177,73:[2,86],75:[2,86],76:[2,86],77:[2,86],81:176,82:[2,86],83:[2,86],84:[2,86],86:[2,86],88:[2,86]},{30:[1,178]},{3:180,4:52,5:53,6:[1,57],8:[1,58],13:[1,179]},{1:[2,78],6:[2,78],8:[2,78],13:[2,78],19:[2,78],22:[2,78],25:[2,78],26:[2,78],27:[2,78],28:[2,78],29:[2,78],30:[2,78],31:[2,78],32:[2,78],33:[2,78],34:[2,78],35:[2,78],36:[2,78],41:[2,78],46:[2,78],51:[2,78],62:[2,78],66:[2,78],67:[2,78],68:[2,78],70:[2,78],71:[2,78],73:[2,78],75:[2,78],76:[2,78],77:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78],86:[2,78],88:[2,78]},{26:[2,94],82:[2,94],83:[2,94]},{3:46,4:52,5:53,6:[1,57],8:[1,58],12:35,13:[1,37],15:22,18:47,19:[1,54],21:48,22:[1,55],25:[1,20],26:[2,98],27:[1,38],28:[1,39],29:[1,40],30:[1,41],31:[1,42],32:[1,43],33:[1,44],34:[1,45],35:[1,49],36:[1,50],37:51,41:[1,56],44:21,45:7,46:[2,56],47:5,48:6,49:8,50:9,51:[1,10],52:11,53:12,54:13,55:14,56:15,57:16,58:17,59:18,60:19,61:28,62:[1,33],67:[1,29],68:[1,31],70:[1,30],71:[1,34],73:[1,23],75:[1,24],76:[1,25],77:[1,32],82:[2,98],83:[2,98],84:[1,26],86:[1,36],88:[1,27]},{6:[2,95],8:[2,95],13:[2,95],19:[2,95],22:[2,95],25:[2,95],26:[2,95],27:[2,95],28:[2,95],29:[2,95],30:[2,95],31:[2,95],32:[2,95],33:[2,95],34:[2,95],35:[2,95],36:[2,95],41:[2,95],46:[2,95],51:[2,95],62:[2,95],67:[2,95],68:[2,95],70:[2,95],71:[2,95],73:[2,95],75:[2,95],76:[2,95],77:[2,95],82:[2,95],83:[2,95],84:[2,95],86:[2,95],88:[2,95]},{6:[2,96],8:[2,96],13:[2,96],19:[2,96],22:[2,96],25:[2,96],26:[2,96],27:[2,96],28:[2,96],29:[2,96],30:[2,96],31:[2,96],32:[2,96],33:[2,96],34:[2,96],35:[2,96],36:[2,96],41:[2,96],46:[2,96],51:[2,96],62:[2,96],67:[2,96],68:[2,96],70:[2,96],71:[2,96],73:[2,96],75:[2,96],76:[2,96],77:[2,96],82:[2,96],83:[2,96],84:[2,96],86:[2,96],88:[2,96]},{30:[1,181]},{6:[2,97],8:[2,97],13:[2,97],19:[2,97],22:[2,97],25:[2,97],26:[2,97],27:[2,97],28:[2,97],29:[2,97],30:[2,97],31:[2,97],32:[2,97],33:[2,97],34:[2,97],35:[2,97],36:[2,97],41:[2,97],46:[2,97],51:[2,97],62:[2,97],67:[2,97],68:[2,97],70:[2,97],71:[2,97],73:[2,97],75:[2,97],76:[2,97],77:[2,97],82:[2,97],83:[2,97],84:[2,97],86:[2,97],88:[2,97]}],
defaultActions: {168:[2,101]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};
/* generated by jison-lex 0.2.1 */
var lexer = (function(){
var lexer = {

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input) {
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip over C++-style comments */
break;
case 1:/* skip space */
break;
case 2:return 73;
break;
case 3:return 76; 
break;
case 4:return 70;
break;
case 5:return 68;
break;
case 6:return 67;
break;
case 7:return 75;
break;
case 8:return 84;
break;
case 9:return 85;
break;
case 10:return 62;
break;
case 11:return 65;
break;
case 12:return 88;
break;
case 13:return 86;
break;
case 14:return 41;
break;
case 15:return 66;
break;
case 16:return 83;
break;
case 17:return 77;
break;
case 18:return 82;
break;
case 19:return 35;
break;
case 20:return 36;
break;
case 21:return 71;
break;
case 22:return 93; 
break;
case 23: 
                                   yy_.yytext = yy_.yytext.replace (/[\s:]/g, ""); 
                                   return 13; 
                              
break;
case 24: return 31; 
break;
case 25: return 32; 
break;
case 26:return 25;
break;
case 27:return 26;
break;
case 28:return 19;
break;
case 29:return 20;
break;
case 30:return 22;
break;
case 31:return 23;
break;
case 32:return "SEMICOLON";
break;
case 33:return 28;
break;
case 34:return 30;
break;
case 35:return 29;
break;
case 36:return 33;
break;
case 37:return 33;
break;
case 38:return 33;
break;
case 39:return 33;
break;
case 40:return 33;
break;
case 41:return 33;
break;
case 42:return 34;
break;
case 43: this.begin ('ST_QUOTE2'); return 8; 
break;
case 44: this.begin ('ST_QUOTE1'); return 6; 
break;
case 45: this.begin ('ST_COMMENT'); 
break;
case 46:return 27;
break;
case 47:return 27;
break;
case 48:return 10;
break;
case 49:return 10;
break;
case 50: this.popState (); return "QUOTE2"; 
break;
case 51:return 'ENDOFFILE';
break;
case 52:return 10;
break;
case 53:return 10;
break;
case 54: this.popState (); return "QUOTE1"; 
break;
case 55:return 'ENDOFFILE';
break;
case 56: this.popState(); 
break;
case 57:/* ignore */
break;
case 58:/* ignore */
break;
case 59:return 'ENDOFFILE';
break;
}
},
rules: [/^(?:\/\/.*)/,/^(?:\s+)/,/^(?:for\b)/,/^(?:while\b)/,/^(?:break\b)/,/^(?:continue\b)/,/^(?:return\b)/,/^(?:do\b)/,/^(?:if\b)/,/^(?:else\b)/,/^(?:try\b)/,/^(?:catch\b)/,/^(?:await\b)/,/^(?:function\b)/,/^(?:defer\b)/,/^(?:finally\b)/,/^(?:case\b)/,/^(?:switch\b)/,/^(?:default\b)/,/^(?:this\b)/,/^(?:arguments\b)/,/^(?:with\b)/,/^(?:#![ ]*[/].*)/,/^(?:[a-zA-Z_0-9]+[ ^]*[:])/,/^(?:[a-zA-Z_][a-zA-Z_0-9]*)/,/^(?:[-]?[0-9]*\.[0-9]+)/,/^(?:\{)/,/^(?:\})/,/^(?:\()/,/^(?:\))/,/^(?:\[)/,/^(?:\])/,/^(?:;)/,/^(?:,)/,/^(?::)/,/^(?:\.)/,/^(?:[=]+)/,/^(?:!==)/,/^(?:!=)/,/^(?:<=)/,/^(?:>=)/,/^(?:[<>&\|*^/~+\-][=])/,/^(?:!)/,/^(?:")/,/^(?:')/,/^(?:\/\*)/,/^(?:[^!./{}()\[\];,:"'\s]+)/,/^(?:.)/,/^(?:\\.)/,/^(?:[^\\"]+)/,/^(?:")/,/^(?:$)/,/^(?:\\.)/,/^(?:[^\\']+)/,/^(?:')/,/^(?:$)/,/^(?:\*\/)/,/^(?:\*)/,/^(?:[^*]+)/,/^(?:$)/],
conditions: {"ST_QUOTE2":{"rules":[48,49,50,51],"inclusive":true},"ST_QUOTE1":{"rules":[52,53,54,55],"inclusive":true},"ST_COMMENT":{"rules":[56,57,58,59],"inclusive":true},"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}